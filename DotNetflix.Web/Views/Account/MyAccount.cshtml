@using DotNetflix.Web.Auth
@model ApplicationUser

<div class="container dnf_content">

    <div class="text-center p-3">
        <h1>Welcome to your account @Model.UserName</h1>
        <hr />
    </div>
        
    <div class="row justify-content-center">
        <!-- First column with profile image and buttons to change view content -->
        <div class="col-lg-2 col-md-3 col-sm-4 col-8">
            <div class="row px-2 justify-content-center">
                @if (Model.Avatar == null)
                {
                    <img class="img-fluid"
                        src="~/img/Avatars/User_Avatar-512.webp"
                        alt="User avatar image"
                        data-toggle="modal"
                        data-target="#chooseAvatarModal" 
                        style="cursor:pointer"/>
                }
                else
                {
                    <img class="img-fluid"
                        src="@Url.Action("GetAvatar", "Account")"
                        alt="User avatar image"
                        data-toggle="modal"
                        data-target="#chooseAvatarModal"
                        style="cursor:pointer"/>
                }
            </div>
            <div class="row px-2">
                <form asp-action="MyAccount" method="get" class="text-center">
                    <input style="width:150px" type="submit" name="view" value="Profile"
                           @{ string tmp = (string)ViewData["View"] == "Profile" ? "btn-info" : "btn-outline-info"; }
                           class="@tmp btn btn-sm m-1">
                    <input style="width:150px" type="submit" name="view" value="Rated movies"
                           @{ tmp = (string)ViewData["View"] == "Rated movies" ? "btn-info" : "btn-outline-info"; }
                           class="@tmp btn btn-sm m-1">
                    <input style="width:150px" type="submit" name="view" value="Wishlist"
                           @{ tmp = (string)ViewData["View"] == "Wishlist" ? "btn-info" : "btn-outline-info"; }
                           class="@tmp btn btn-sm m-1">
                </form>
            </div>
        </div>
        <!-- Second column displays content depending on which button has been pressed -->
        <div class="col-lg-10 col-md-9 col-sm-8">
            @switch (ViewData["View"])
            {
                case "Profile":
                    @await Component.InvokeAsync("MyAccountProfile")
                    break;
                case "Rated movies":
                    @await Component.InvokeAsync("MyAccountRatedMovies")
                    break;
                case "Wishlist":
                    <h3 class="text-info">Wishlist</h3>
                    @await Component.InvokeAsync("MyAccountWishlist")
                    break;
                default:
                    break;
            }
        </div>
    </div>
</div>

<!-- Choose avatar Modal -->
<div class="modal" id="chooseAvatarModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header colorlightbg colordark">
                <h4 class="modal-title">Select profile image</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body colorlightbg colordark">
                <form method="post" enctype="multipart/form-data" asp-controller="Account" asp-action="UploadAvatar">
                    <div class="form-group">
                        <input type="file" name="file" />
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Upload" />
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

